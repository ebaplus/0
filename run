# Nove verzije aplikacija
$latestVersions = @{
    "asseco"       = "3.20"
    "safenet"      = "8.3"
    "scmanagement" = "6.3"
    "activ"        = "7.1"
}

# Map of related keywords
$keywordGroups = @{
    "asseco"       = @("asseco", "signergy", "unicredit")
    "scmanagement" = @("scmanagement", "e-baplus")
    "safenet"      = @("safenet", "authentication")
    "activ"        = @("activ", "card")
}

$appFlags = @{}
$found    = @{}

# Read registry uninstall entries
$uninstallPaths = @(
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
)

foreach ($path in $uninstallPaths) {
    $apps = Get-ItemProperty $path -ErrorAction SilentlyContinue
    foreach ($app in $apps) {
        $name = $app.DisplayName
        $version = $app.DisplayVersion
        if ($name -and $version) {
            foreach ($group in $keywordGroups.GetEnumerator()) {
                $key = $group.Key
                foreach ($keyword in $group.Value) {
                    if ($name.ToLower().Contains($keyword)) {
                        $verCurrent  = ($version -split "\.")[0..1] -join "."
                        $verExpected = $latestVersions[$key]
                        $status = if ($verExpected -and ([version]$verCurrent -lt [version]$verExpected)) {
                            "upgrade"
                        } elseif ($verExpected -and ([version]$verCurrent -ge [version]$verExpected)) {
                            "ignore"
                        } else {
                            "ignore"
                        }
                        $found[$key] = "$name - Verzija: $version ($status)"
                        $appFlags[$key] = $status
                        break
                    }
                }
            }
        }
    }
}

# Missing apps
foreach ($key in $latestVersions.Keys) {
    if (-not $appFlags.ContainsKey($key)) {
        $appFlags[$key] = "install"
        $found[$key] = "$key - nije pronadjen (install)"
    }
}

# SafeNet / Activ logic
$safenetStatus = $appFlags["safenet"]
$activStatus   = $appFlags["activ"]

if (($safenetStatus -ne "install") -and ($activStatus -ne "install")) {
    Write-Host "Podrska za USB i Karticu je instalirana na ovom racunalu." -ForegroundColor Cyan
    $appFlags["safenet"] = "ignore"
    $appFlags["activ"]   = "ignore"
}
elseif ($safenetStatus -eq "install" -and $activStatus -eq "install") {
    $appFlags["safenet"] = "install"
    $appFlags["activ"]   = "ignore"
}
elseif ($safenetStatus -ne "install") {
    $appFlags["activ"] = "ignore"
}
elseif ($activStatus -ne "install") {
    $appFlags["safenet"] = "ignore"
}

# --- (logging section same as before) ---
